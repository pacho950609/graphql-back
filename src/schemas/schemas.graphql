type PlayerRank {
    id: ID!
    name: String
    lastName: String
    wins: Int
    losses: Int
}

type Set {
    firstPlayerPoints: Int!
    secondPlayerPoints: Int!
    setNumber: Int!
}

type Match {
    id: ID!
    firstPlayerId: String!
    secondPlayerId: String!
    winnerPlayerId: String!
    loserPlayerId: String!
    sets: [Set]
}

input MatchInput {
    firstPlayerId: String!
    secondPlayerId: String!
    winnerPlayerId: String!
    loserPlayerId: String!
    sets: [SetInput]!
}

input SetInput {
    firstPlayerPoints: Int!
    secondPlayerPoints: Int!
    setNumber: Int!
}


type Query {
    getRank: [PlayerRank]
    getBest(id: String!): PlayerRank
}

type Mutation {
    addMatch(input: MatchInput!): Match
}
